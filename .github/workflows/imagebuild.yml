name: Build and push image to ECR

on:
  workflow_dispatch:
    inputs:
      ECR_REPOSITORY:
        description: 'Enter the ECR_REPOSITORY'
        required: true
        type: string
      ECS_TASK_DEFINITION:
        type: string
        description: 'Enter the ECS_TASK_DEFINITION'
        required: true
      CONTAINER_NAME:
        description: 'Enter the CONTAINER_NAME'
        required: true		
        type: string
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
  ECS_TASK_DEFINITION: ${{ inputs.ECS_TASK_DEFINITION }}
  CONTAINER_NAME: ${{ inputs.CONTAINER_NAME }}
  
permissions:
  id-token: write
  contents: read # This is required for actions/checkout@v2

jobs:
  deploy:
    name: Build Image & deploy to task definition
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::875617876901:role/github-deploy
        role-session-name: github-deploy
        aws-region: ${{ env.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
